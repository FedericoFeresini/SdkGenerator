{
  "openapi": "3.0.1",
  "info": {
    "title": "Criteo API",
    "description": "Criteo publicly exposed API",
    "version": "1.0"
  },
  "servers": [
    {
      "url": "http://api.criteo.com"
    }
  ],
  "paths": {
    "/2020-10/sample/hello-world": {
      "get": {
        "tags": [
          "Analytics"
        ],
        "description": "You can add a route description by using the 'remarks' block",
        "operationId": "ApiHello-worldGet",
        "parameters": [
          {
            "name": "i-d",
            "in": "query",
            "description": "You can add a parameter description by using the 'param' block",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/HelloWorldMessageResponse"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/HelloWorldMessageResponse"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/HelloWorldMessageResponse"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Analytics"
        ],
        "description": "You can add a route description by using the 'remarks' block",
        "operationId": "ApiHello-worldPost",
        "requestBody": {
          "description": "You can add a parameter description by using the 'param' block",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/HelloWorldMessageRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HelloWorldMessageRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/HelloWorldMessageRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/HelloWorldMessageRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/HelloWorldMessageResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HelloWorldMessageResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/HelloWorldMessageResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Analytics"
        ],
        "description": "You can add a route description by using the 'remarks' block",
        "operationId": "ApiHello-worldPut",
        "requestBody": {
          "description": "You can add a parameter description by using the 'param' block",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/HelloWorldMessageRequest"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/HelloWorldMessageRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/HelloWorldMessageRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/HelloWorldMessageRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/HelloWorldMessageResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HelloWorldMessageResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/HelloWorldMessageResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          }
        }
      }
    },
    "/2020-10/statistics/report": {
      "post": {
        "tags": [
          "Analytics"
        ],
        "description": "This Statistics endpoint provides adset related data. It is an upgrade of our previous Statistics endpoint, and includes new metrics and customization capabilities.",
        "operationId": "GetAdsetReport",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/StatisticsReportQueryMessage"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StatisticsReportQueryMessage"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/StatisticsReportQueryMessage"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/StatisticsReportQueryMessage"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Report generated OK.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "byte"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "byte"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "byte"
                }
              }
            }
          },
          "403": {
            "description": "Access denied (Endpoint in beta)",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          }
        }
      }
    },
    "/2020-10/transactions/report": {
      "post": {
        "tags": [
          "Analytics"
        ],
        "description": "This Transactions endpoint provides transactions id related data.",
        "operationId": "GetTransactionsReport",
        "requestBody": {
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/TransactionsReportQueryDataMessage"
              }
            },
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TransactionsReportQueryDataMessage"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/TransactionsReportQueryDataMessage"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/TransactionsReportQueryDataMessage"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Report generated OK.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "byte"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "byte"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "byte"
                }
              }
            }
          },
          "403": {
            "description": "Access denied (Endpoint in beta)",
            "content": {
              "text/plain": { },
              "application/json": { },
              "text/json": { }
            }
          }
        }
      }
    },
    "/2020-10/advertisers/me": {
      "get": {
        "tags": [
          "Advertiser"
        ],
        "description": "Use this call to fetch a list of all advertisers in your account.",
        "operationId": "ApiPortfolioGet",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetPortfolioResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPortfolioResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPortfolioResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/GetPortfolioResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPortfolioResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPortfolioResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "HelloWorldMessageResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          }
        },
        "description": "You can add a schema description by using the 'summary' block"
      },
      "HelloWorldMessageRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "message": {
            "type": "string"
          }
        },
        "description": "You can add a schema description by using the 'summary' block"
      },
      "StatisticsReportQueryMessage": {
        "required": [
          "startDate",
          "endDate",
          "dimensions",
          "metrics",
          "format",
          "currency"
        ],
        "type": "object",
        "properties": {
          "advertiserIds": {
            "type": "string",
            "description": "The comma-separated list of advertiser ids. If empty, all the advertisers in the portfolio will be used"
          },
          "startDate": {
            "type": "string",
            "description": "Start date of the reported metrics.",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "description": "End date of the reported metrics.",
            "format": "date-time"
          },
          "dimensions": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "enum": [
                "AdsetId",
                "Adset",
                "AdvertiserId",
                "Advertiser",
                "CategoryId",
                "Category",
                "Hour",
                "Day",
                "Week",
                "Month",
                "Year",
                "Os",
                "Device"
              ],
              "type": "string"
            },
            "description": "The dimensions for the report."
          },
          "metrics": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "description": "The list of metrics to report."
          },
          "format": {
            "enum": [
              "Csv",
              "Excel",
              "Xml",
              "Json"
            ],
            "type": "string",
            "description": "The file format of the generated report."
          },
          "currency": {
            "type": "string",
            "description": "The currency used for the report. ISO 4217 code (three-letter capitals)."
          },
          "timezone": {
            "type": "string",
            "description": "The timezone used for the report."
          }
        },
        "description": "This is the message defining the query for Adset report"
      },
      "TransactionsReportQueryDataMessage": {
        "required": [
          "data"
        ],
        "type": "object",
        "properties": {
          "data": {
            "uniqueItems": false,
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TransactionsReportQueryEntityMessage"
            }
          }
        },
        "description": "Contains queries for Transaction report"
      },
      "TransactionsReportQueryEntityMessage": {
        "required": [
          "type",
          "attributes"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "attributes": {
            "$ref": "#/components/schemas/TransactionsReportQueryMessage"
          }
        },
        "description": "Contains a query for Transaction report and its type"
      },
      "TransactionsReportQueryMessage": {
        "required": [
          "startDate",
          "endDate",
          "format"
        ],
        "type": "object",
        "properties": {
          "advertiserIds": {
            "type": "string",
            "description": "The comma-separated list of advertiser ids. If empty, all the advertisers in the portfolio will be used"
          },
          "startDate": {
            "type": "string",
            "description": "Start date of the report.",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "description": "End date of the report.",
            "format": "date-time"
          },
          "format": {
            "enum": [
              "Csv",
              "Excel",
              "Xml",
              "Json"
            ],
            "type": "string",
            "description": "The file format of the generated report."
          },
          "timezone": {
            "type": "string",
            "description": "The timezone used for the report."
          },
          "eventType": {
            "type": "string",
            "description": "Apply a filter on Event type ."
          },
          "currency": {
            "type": "string",
            "description": "The currency used for the report. ISO 4217 code (three-letter capitals)."
          }
        },
        "description": "This is the message defining the query for Transaction report"
      },
      "GetPortfolioResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CriteoApiDataOfPortfolioMessage"
            },
            "description": "The response�s primary data"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CriteoApiError"
            },
            "description": "Error list returned by the Criteo API \r\nFor successful requests it is empty"
          },
          "warnings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CriteoApiWarning"
            },
            "description": "Warnings list returned by the Criteo API\r\nIn some situations the operations are successful but it may be useful to issue warnings to the API consumer.\r\nFor example the endpoint, entity or field is deprecated. Warnings are like compiler warnings, they indicate that problems may occur in the future."
          }
        },
        "description": "Portfolio fetch Response"
      },
      "CriteoApiDataOfPortfolioMessage": {
        "type": "object",
        "properties": {
          "type": {
            "enum": [
              "campaign",
              "adset",
              "ad",
              "advertiser",
              "agency",
              "publisher",
              "address",
              "client",
              "contact",
              "industry"
            ],
            "type": "string",
            "description": "A string containing the entity type",
            "example": "campaign"
          },
          "id": {
            "type": "string",
            "description": "A opaque string containing the unique Id of the entity"
          },
          "attributes": {
            "$ref": "#/components/schemas/PortfolioMessage"
          },
          "meta": {
            "type": "object",
            "description": "A meta object that contains application-specific metadata"
          }
        },
        "description": "Generic Criteo API successful data model"
      },
      "CriteoApiError": {
        "type": "object",
        "properties": {
          "traceId": {
            "type": "string",
            "description": "The correlation ID provided by the gateway"
          },
          "type": {
            "enum": [
              "access_control",
              "authentication",
              "authorization",
              "availability",
              "deprecation",
              "quota",
              "validation"
            ],
            "type": "string",
            "description": "A machine-readable code specifying error category",
            "example": "access_control"
          },
          "code": {
            "enum": [
              "internal-error",
              "deprecated-field",
              "endpoint-deprecated",
              "required-field",
              "invalid-date-format",
              "invalid",
              "invalid-ranged",
              "invalid-timespan"
            ],
            "type": "string",
            "description": "A machine-readable error code string in kabab-case. Unique across Criteo",
            "example": "internal-error"
          },
          "instance": {
            "type": "string",
            "description": "A URI reference that identifies the specific occurrence of the problem"
          },
          "title": {
            "type": "string",
            "description": "A short, human-readable summary of the problem type."
          },
          "detail": {
            "type": "string",
            "description": "A human-readable explanation specific to this occurrence of the problem."
          },
          "source": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "A machine-readable structure to reference to the exact location(s) causing the error(s)."
          }
        },
        "description": "Criteo API response error"
      },
      "CriteoApiWarning": {
        "type": "object",
        "properties": {
          "traceId": {
            "type": "string",
            "description": "The correlation ID provided by the gateway"
          },
          "type": {
            "enum": [
              "access_control",
              "authentication",
              "authorization",
              "availability",
              "deprecation",
              "quota",
              "validation"
            ],
            "type": "string",
            "description": "A machine-readable code specifying error category",
            "example": "access_control"
          },
          "code": {
            "enum": [
              "internal-error",
              "deprecated-field",
              "endpoint-deprecated",
              "required-field",
              "invalid-date-format",
              "invalid",
              "invalid-ranged",
              "invalid-timespan"
            ],
            "type": "string",
            "description": "A machine-readable error code string in kabab-case. Unique across Criteo",
            "example": "internal-error"
          },
          "instance": {
            "type": "string",
            "description": "A URI reference that identifies the specific occurrence of the problem"
          },
          "title": {
            "type": "string",
            "description": "A short, human-readable summary of the problem type."
          },
          "detail": {
            "type": "string",
            "description": "A human-readable explanation specific to this occurrence of the problem."
          }
        },
        "description": "Criteo API response warning"
      },
      "PortfolioMessage": {
        "type": "object",
        "properties": {
          "advertiserName": {
            "type": "string"
          }
        },
        "description": "Class with elementary info about advertiser"
      }
    }
  },
  "x-samples-languages": [
    "java",
    "python",
    "php",
    "csharp",
    "javascript",
    "curl",
    "ruby"
  ]
}
